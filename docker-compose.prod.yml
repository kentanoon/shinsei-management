version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-shinsei_management}
      POSTGRES_USER: ${POSTGRES_USER:-shinsei_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-shinsei_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    # Use prebuilt image from GitHub Container Registry
    image: ghcr.io/kentanoon/shinsei-management/backend:latest
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-shinsei_user}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB:-shinsei_management}
      - SECRET_KEY=${SECRET_KEY}
      - ENVIRONMENT=production
      - DEBUG=false
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs

  frontend:
    # Use prebuilt image from GitHub Container Registry
    image: ghcr.io/kentanoon/shinsei-management/frontend:latest
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Nginx reverse proxy for SSL termination (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "443:443"
    volumes:
      - ./nginx/nginx-prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    profiles:
      - ssl

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: shinsei-management-prod